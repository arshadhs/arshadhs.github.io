<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspberry-Pi on Arshad Siddiqui</title>
    <link>http://localhost:1313/categories/raspberry-pi/</link>
    <description>Recent content in Raspberry-Pi on Arshad Siddiqui</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Nov 2018 20:45:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bluetooth Speaker</title>
      <link>http://localhost:1313/docs/technology/bluetoothspeakerraspberrypi/</link>
      <pubDate>Tue, 13 Nov 2018 20:45:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/bluetoothspeakerraspberrypi/</guid>
      <description>&lt;h1 id=&#34;raspberry-pi--connect-bluetooth-speaker&#34;&gt;&#xA;  Raspberry Pi : Connect Bluetooth Speaker&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#raspberry-pi--connect-bluetooth-speaker&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Connecting Raspberry Pi to Mi Pocket Speaker 2&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-pi@raspberrypi:~&#34; data-lang=&#34;pi@raspberrypi:~&#34;&gt;[bluetooth]# power on&#xD;&#xA;Changing power on succeeded&#xD;&#xA;[bluetooth]# agent on&#xD;&#xA;Agent registered&#xD;&#xA;[bluetooth]# scan on&#xD;&#xA;Discovery started&#xD;&#xA;[CHG] Controller B8:27:EB:79:F6:B7 Discovering: yes&#xD;&#xA;[bluetooth]# default-agent&#xD;&#xA;Default agent request successful&#xD;&#xA;[CHG] Device 00:EC:0A:57:F2:65 LegacyPairing: yes&#xD;&#xA;[bluetooth]# list&#xD;&#xA;Controller B8:27:EB:79:F6:B7 raspberrypi [default]&#xD;&#xA;[bluetooth]# devices&#xD;&#xA;Device 5C:72:FE:B7:35:FD 5C-72-FE-B7-35-FD&#xD;&#xA;Device 28:F0:76:0A:B9:7B 28-F0-76-0A-B9-7B&#xD;&#xA;Device 00:EC:0A:57:F2:65 Redmi&#xD;&#xA;[NEW] Device 74:A3:4A:15:DD:71 Mi Pocket Speaker 2&#xD;&#xA;[bluetooth]# pair 74:A3:4A:15:DD:71&#xD;&#xA;Attempting to pair with 74:A3:4A:15:DD:71&#xD;&#xA;[CHG] Device 74:A3:4A:15:DD:71 Connected: yes&#xD;&#xA;[CHG] Device 74:A3:4A:15:DD:71 UUIDs:&#xD;&#xA;        00001108-0000-1000-8000-00805f9b34fb&#xD;&#xA;        0000110b-0000-1000-8000-00805f9b34fb&#xD;&#xA;        0000110c-0000-1000-8000-00805f9b34fb&#xD;&#xA;        0000110e-0000-1000-8000-00805f9b34fb&#xD;&#xA;        0000111e-0000-1000-8000-00805f9b34fb&#xD;&#xA;[CHG] Device 74:A3:4A:15:DD:71 Paired: yes&#xD;&#xA;Pairing successful&#xD;&#xA;[CHG] Device 74:A3:4A:15:DD:71 Connected: no&#xD;&#xA;[bluetooth]# info 74:A3:4A:15:DD:71&#xD;&#xA;Device 74:A3:4A:15:DD:71&#xD;&#xA;        Name: Mi Pocket Speaker 2&#xD;&#xA;        Alias: Mi Pocket Speaker 2&#xD;&#xA;        Class: 0x240404&#xD;&#xA;        Icon: audio-card&#xD;&#xA;        Paired: yes&#xD;&#xA;        Trusted: no&#xD;&#xA;        Blocked: no&#xD;&#xA;        Connected: no&#xD;&#xA;        LegacyPairing: yes&#xD;&#xA;        UUID: Headset                   (00001108-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: Audio Sink                (0000110b-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: A/V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: Handsfree                 (0000111e-0000-1000-8000-00805f9b34fb)&#xD;&#xA;[bluetooth]# trust 74:A3:4A:15:DD:71&#xD;&#xA;[CHG] Device 74:A3:4A:15:DD:71 Trusted: yes&#xD;&#xA;Changing 74:A3:4A:15:DD:71 trust succeeded&#xD;&#xA;[bluetooth]# info 74:A3:4A:15:DD:71&#xD;&#xA;Device 74:A3:4A:15:DD:71&#xD;&#xA;        Name: Mi Pocket Speaker 2&#xD;&#xA;        Alias: Mi Pocket Speaker 2&#xD;&#xA;        Class: 0x240404&#xD;&#xA;        Icon: audio-card&#xD;&#xA;        Paired: yes&#xD;&#xA;        Trusted: yes&#xD;&#xA;        Blocked: no&#xD;&#xA;        Connected: no&#xD;&#xA;        LegacyPairing: yes&#xD;&#xA;        UUID: Headset                   (00001108-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: Audio Sink                (0000110b-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: A/V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)&#xD;&#xA;        UUID: Handsfree                 (0000111e-0000-1000-8000-00805f9b34fb)&#xD;&#xA;[bluetooth]# quit&#xD;&#xA;&#xD;&#xA;pi@raspberrypi:~ $ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install pulseaudio -y&#xD;&#xA;pi@raspberrypi:~ $ mkdir -p scripts&#xD;&#xA;pi@raspberrypi:~ $ vim scripts/autopair&#xD;&#xA;#!/bin/bash&#xD;&#xA;bluetoothctl &amp;lt;&amp;lt; EOF&#xD;&#xA;connect [enter your MAC add]&#xD;&#xA;EOF&#xD;&#xA;pi@raspberrypi:~ $ chmod +x !$&#xD;&#xA;chmod +x scripts/autopair&#xD;&#xA;pi@raspberrypi:~ $ sudo vim /boot/config.txt&#xD;&#xA;#dtparam=audio=on&#xD;&#xA;pi@raspberrypi:~ $ vim ~/scripts/on.py&#xD;&#xA;#!/usr/bin/python```&#xD;&#xA;&#xD;&#xA;## Monitor removal of bluetooth reciever&#xD;&#xA;&#xD;&#xA;```import os&#xD;&#xA;import sys&#xD;&#xA;import subprocess&#xD;&#xA;import time&#xD;&#xA;def blue_it():&#xD;&#xA;    status = subprocess.call(&amp;#39;ls /dev/input/event0 2&amp;gt;/dev/null&amp;#39;, shell=True)&#xD;&#xA;    while status == 0:&#xD;&#xA;        print(&amp;#34;Bluetooth UP&amp;#34;)&#xD;&#xA;        print(status)&#xD;&#xA;        time.sleep(15)&#xD;&#xA;        status = subprocess.call(&amp;#39;ls /dev/input/event0 2&amp;gt;/dev/null&amp;#39;, shell=True)&#xD;&#xA;    else:&#xD;&#xA;        waiting()&#xD;&#xA;def waiting():&#xD;&#xA;    subprocess.call(&amp;#39;killall -9 pulseaudio&amp;#39;, shell=True)&#xD;&#xA;    time.sleep(3)&#xD;&#xA;    subprocess.call(&amp;#39;pulseaudio --start&amp;#39;, shell=True)&#xD;&#xA;    time.sleep(2)&#xD;&#xA;    status = subprocess.call(&amp;#39;ls /dev/input/event0 2&amp;gt;/dev/null&amp;#39;, shell=True)&#xD;&#xA;    while status == 2:&#xD;&#xA;        print(&amp;#34;Bluetooth DOWN&amp;#34;)&#xD;&#xA;        print(status)&#xD;&#xA;        subprocess.call(&amp;#39;~/scripts/autopair&amp;#39;, shell=True)&#xD;&#xA;        time.sleep(15)&#xD;&#xA;        status = subprocess.call(&amp;#39;ls /dev/input/event0 2&amp;gt;/dev/null&amp;#39;, shell=True)&#xD;&#xA;    else:&#xD;&#xA;        blue_it()&#xD;&#xA;blue_it()&#xD;&#xA;pi@raspberrypi:~ $chmod +x ~/scripts/on.py&#xD;&#xA;pi@raspberrypi:~ $vim ~/.bashrc&#xD;&#xA;pulseaudio --start&#xD;&#xA;wait&#xD;&#xA;~/python/on.py```&#xD;&#xA;&#xD;&#xA;### Reboot&#xD;&#xA;&#xD;&#xA;If the connection fails, remove the device and pair-trust-connect&#xD;&#xA;&#xD;&#xA;```remove aa:bb:cc:dd:ee:ff&#xD;&#xA;&#xD;&#xA;### Test the sound&#xD;&#xA;&#xD;&#xA;```pi@raspberrypi:~ $wget http://rpf.io/lamp3 -O example.mp3 --no-check-certificate&#xD;&#xA;pi@raspberrypi:~ $ omxplayer -o alsa ~/example.mp3```&#xD;&#xA;&#xD;&#xA;When you connect two Bluetooth devices together (i.e. you &amp;#34;pair&amp;#34; them) you only establish a connection between the two: network link, audio sink, audio source. If you connect your Pi to a Bluetooth audio source, it doesn&amp;#39;t necessarily mean you want to use the new audio sink at once. You need a different command for that.&#xD;&#xA;In short, under GNU/Linux in this very case:&#xD;&#xA;- there is a command for pairing Bluetooth devices&#xD;&#xA;- there is a command to select what audio device will play the sound&#xD;&#xA;&#xD;&#xA;These two do not overlap.&#xD;&#xA;Selecting what device plays sound is done through a dedicated application called PulseAudio daemon (a service that runs in the background), which manages sound on most GNU/Linux distributions. It doesn&amp;#39;t control Bluetooth, the latter of which is managed by the Bluez daemon. That&amp;#39;s why you have two separate commands.&#xD;&#xA;&#xD;&#xA;If you want to play audio through a recently paired Bluetooth audio device, here&amp;#39;s what to do:&#xD;&#xA;list audio sinks : pacmd list-sinks | grep -E &amp;#39;name:|index&amp;#39; . The * locates the currently selected sink. Note what follows name: for the Bluetooth device the Pi is connected to.&#xD;&#xA;set the default audio sink : pacmd set-default-sink &amp;lt;the name of the desired BT audio sink&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Dropbox</title>
      <link>http://localhost:1313/docs/technology/dropboxwithraspberrypi/</link>
      <pubDate>Thu, 27 Oct 2016 23:45:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/dropboxwithraspberrypi/</guid>
      <description>&lt;h1 id=&#34;dropbox-with-raspberry-pi&#34;&gt;&#xA;  Dropbox with Raspberry Pi&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#dropbox-with-raspberry-pi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Act as root, since I wanted to run the script on startup as a service, so I must setup dropbox for &amp;lsquo;root&amp;rsquo; user rather than &amp;lsquo;pi&amp;rsquo; -&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-pi@raspberrypi:~&#34; data-lang=&#34;pi@raspberrypi:~&#34;&gt;root@raspberrypi:/home/pi# cd /root/```&#xD;&#xA;&#xD;&#xA;### Get the script and link&#xD;&#xA;&#xD;&#xA;```root@raspberrypi:~# git clone http://github.com/andreafabrizi/Dropbox-Uploader.git&#xD;&#xA;Cloning into &amp;#39;Dropbox-Uploader&amp;#39;...&#xD;&#xA;&#xD;&#xA;remote: Counting objects: 785, done.&#xD;&#xA;remote: Total 785 (delta 0), reused 0 (delta 0), pack-reused 785&#xD;&#xA;Receiving objects: 100% (785/785), 237.87 KiB | 0 bytes/s, done.&#xD;&#xA;Resolving deltas: 100% (409/409), done.&#xD;&#xA;Checking connectivity... done.&#xD;&#xA;root@raspberrypi:~# cd Dropbox-Uploader/&#xD;&#xA;root@raspberrypi:~/Dropbox-Uploader# ./dropbox_uploader.sh```&#xD;&#xA;&#xD;&#xA; This is the first time you run this script, please follow the instructions:&#xD;&#xA;&#xD;&#xA; 1) Open the following URL in your Browser, and log in using your account: https://www.dropbox.com/developers/apps&#xD;&#xA; 2) Click on &amp;#34;Create App&amp;#34;, then select &amp;#34;Dropbox API app&amp;#34;&#xD;&#xA; 3) Now go on with the configuration, choosing the app permissions and access restrictions to your DropBox folder&#xD;&#xA; 4) Enter the &amp;#34;App Name&amp;#34; that you prefer (e.g. MyUploader49491793716643)&#xD;&#xA;&#xD;&#xA; Now, click on the &amp;#34;Create App&amp;#34; button.&#xD;&#xA;&#xD;&#xA; When your new App is successfully created, please click on the Generate button&#xD;&#xA; under the &amp;#39;Generated access token&amp;#39; section, then copy and paste the new access token here:&#xD;&#xA;&#xD;&#xA; ```# Access token: .............&#xD;&#xA;&#xD;&#xA; &amp;gt; The access token is ............. Looks ok? [y/N]: y&#xD;&#xA;   The configuration has been saved.```&#xD;&#xA;&#xD;&#xA;### Add to Python script&#xD;&#xA;&#xD;&#xA;from subprocess import call&#xD;&#xA;```Upload = &amp;#34;/home/pi/Dropbox-Uploader/dropbox_uploader.sh upload &amp;#34; + str(fileWithPath) + &amp;#34; &amp;#34; + str(fileName)&#xD;&#xA;call ([Upload], shell=True)```&#xD;&#xA;&#xD;&#xA;If you need to unlink from Dropbpx -&#xD;&#xA;&#xD;&#xA;```root@raspberrypi:~/Dropbox-Uploader# ./dropbox_uploader.sh unlink&#xD;&#xA;&#xD;&#xA;pi@raspberrypi ~ $ crontab -e&#xD;&#xA;&#xD;&#xA;# m h  dom mon dow   command&#xD;&#xA;*/10 * * * * /home/pi/deleteOldFile.sh&#xD;&#xA;&#xD;&#xA;pi@raspberrypi ~ $```&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>SSH</title>
      <link>http://localhost:1313/docs/technology/sshwithraspberrypi/</link>
      <pubDate>Sat, 08 Nov 2014 14:08:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/sshwithraspberrypi/</guid>
      <description>&lt;h1 id=&#34;ssh-login-to-raspberry-pi-without-password&#34;&gt;&#xA;  SSH login to Raspberry Pi without password&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#ssh-login-to-raspberry-pi-without-password&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Execute following 3 commands from PC/Laptop from which you want to login to Raspberry Pi without password.&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-laptop:~$&#34; data-lang=&#34;laptop:~$&#34;&gt;Generating public/private rsa key pair.&#xD;&#xA;Enter file in which to save the key (/home/laptop/.ssh/id_rsa): &#xD;&#xA;Enter passphrase (empty for no passphrase): &#xD;&#xA;Enter same passphrase again: &#xD;&#xA;Your identification has been saved in /home/laptop/.ssh/id_rsa.&#xD;&#xA;Your public key has been saved in /home/laptop/.ssh/id_rsa.pub.&#xD;&#xA;The key fingerprint is:&#xD;&#xA;6f:72:4e:e5:f3:81:d4:27:9d:27:06:f0:ce:f1:75:7d laptop&#xD;&#xA;The key&amp;#39;s randomart image is:&#xD;&#xA;+--[ RSA 2048]----+&#xD;&#xA;|          .      |&#xD;&#xA;|                .|&#xD;&#xA;|            +   A|&#xD;&#xA;|           o = o+|&#xD;&#xA;|        S   = *.+|&#xD;&#xA;|         o + o +.|&#xD;&#xA;|        . = + .  |&#xD;&#xA;|         *   o . |&#xD;&#xA;|          .   .  |&#xD;&#xA;+-----------------+&#xD;&#xA;&#xD;&#xA;NUsing ssh create a directory ~/.ssh as user pi on Raspberry -&#xD;&#xA;&#xD;&#xA;laptop:~$ ssh pi@192.168.1.68 mkdir -p .sshpi@192.168.1.68&amp;#39;s password:```&#xD;&#xA;&#xD;&#xA;Append public key to pi@Raspberry:.ssh/authorized_keys and enter pi&amp;#39;s password one last time:&#xD;&#xA;&#xD;&#xA;```laptop:~$ cat .ssh/id_rsa.pub | ssh pi@192.168.1.68 &amp;#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&amp;#39;&#xD;&#xA;pi@192.168.1.68&amp;#39;s password:```&#xD;&#xA;&#xD;&#xA;Now you can log into Raspberry as pi without password:&#xD;&#xA;&#xD;&#xA;```laptop:~$ ssh pi@192.168.1.68```&#xD;&#xA;&#xD;&#xA;Depending on your version of SSH you might also have to do the following changes:&#xD;&#xA;- Put the public key in .ssh/authorized_keys2&#xD;&#xA;- Change the permissions of .ssh to 700&#xD;&#xA;- Change the permissions of .ssh/authorized_keys2 to 640&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Bootup Script</title>
      <link>http://localhost:1313/docs/technology/bootupraspberrypi/</link>
      <pubDate>Mon, 16 Dec 2013 22:45:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/bootupraspberrypi/</guid>
      <description>&lt;h1 id=&#34;bootup-script-setup&#34;&gt;&#xA;  Bootup script Setup&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#bootup-script-setup&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Edit Python script, add as first line -&#xA;&lt;code&gt;#!/usr/bin/python&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Change permissions -&#xA;&lt;code&gt;chmod 755 raspiLapseCam.py&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;That means you can execute it by typing &lt;code&gt;raspiLapseCam.py&lt;/code&gt; rather than &lt;code&gt;python raspiLapseCam.py&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;Then we can use an /etc/init.d script to get it started when the system boots.&lt;/p&gt;&#xA;&lt;p&gt;Start by copying /etc/init.d/skeleton to /etc/init.d/timelapse -&#xA;&lt;code&gt;cd /etc/init.d &amp;amp;&amp;amp; sudo cp skeleton timelapse&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;edit /etc/init.d/timelapse, change lines 23 &amp;amp; 24 to refer to the command &amp;lsquo;/home/pi/raspiLapseCam.py&amp;rsquo; -&lt;/p&gt;</description>
    </item>
    <item>
      <title>e-mail</title>
      <link>http://localhost:1313/docs/technology/emailwithraspberrypi/</link>
      <pubDate>Mon, 16 Dec 2013 22:45:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/emailwithraspberrypi/</guid>
      <description>&lt;h1 id=&#34;e-mail-with-raspberry-pi&#34;&gt;&#xA;  E-Mail with Raspberry Pi&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#e-mail-with-raspberry-pi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;A quick guide to setting up the E-Mail on Raspberry Pi.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;using-ssmtp&#34;&gt;&#xA;  Using SSMTP&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#using-ssmtp&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo apt-get install ssmtp mailutils mpack&lt;/code&gt;&#xA;Now edit the file /etc/ssmtp/ssmtp.conf as root and add the next lines. Please note that some of the lines already exist and may need to be changed. Others don&amp;rsquo;t exist yet and need to be added to the end of the file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Surveillance</title>
      <link>http://localhost:1313/docs/technology/surveillanceraspberrypi/</link>
      <pubDate>Mon, 16 Dec 2013 22:45:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/surveillanceraspberrypi/</guid>
      <description>&lt;h1 id=&#34;raspberry-pi-surveillance&#34;&gt;&#xA;  Raspberry Pi Surveillance&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#raspberry-pi-surveillance&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;One of the hobby projects:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Keep on capturing pictures in a loop, compare current picture with last picture, if the difference in pixel is more than threshold, capture a high resolution image, save it to RAM disk (so that memory card is safe from frequent read write operations), rename the image using date and time; e-mail it with date in subject field.&lt;/li&gt;&#xA;&lt;li&gt;Run a cron job to delete temporary files older than 20 minutes.&lt;/li&gt;&#xA;&lt;li&gt;Run the script as service and use another to monitor the service, on failure restart the service.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;python-script-to-detect-motion&#34;&gt;&#xA;  Python script to detect motion&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#python-script-to-detect-motion&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;(To Do: add git link for the code here))&lt;/p&gt;</description>
    </item>
    <item>
      <title>WiFi</title>
      <link>http://localhost:1313/docs/technology/wifionraspberrypi/</link>
      <pubDate>Sat, 14 Dec 2013 22:47:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/wifionraspberrypi/</guid>
      <description>&lt;h1 id=&#34;wi-fi-set-up-for-raspberry-pi&#34;&gt;&#xA;  Wi-Fi Set-up for Raspberry Pi&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#wi-fi-set-up-for-raspberry-pi&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Make sure your interface file and wpa_supplicant.conf look like the ones below -&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-pi@raspberrypi&#34; data-lang=&#34;pi@raspberrypi&#34;&gt;&#xD;&#xA;auto lo&#xD;&#xA;&#xD;&#xA;iface lo inet loopback&#xD;&#xA;iface eth0 inet dhcp&#xD;&#xA;&#xD;&#xA;allow-hotplug wlan0&#xD;&#xA;iface wlan0 inet dhcp&#xD;&#xA;wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf&#xD;&#xA;iface default inet dhcp&#xD;&#xA;&#xD;&#xA;pi@raspberrypi ~ $ sudo nano /etc/wpa_supplicant/wpa_supplicant.conf&#xD;&#xA;&#xD;&#xA;ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev&#xD;&#xA;update_config=1&#xD;&#xA;&#xD;&#xA;network={&#xD;&#xA;ssid=&amp;#34;YOURSSID&amp;#34;&#xD;&#xA;psk=&amp;#34;YOURPASSWORD&amp;#34;&#xD;&#xA;&#xD;&#xA;# Protocol type can be: RSN (for WP2) and WPA (for WPA1)&#xD;&#xA;proto=WPA&#xD;&#xA;&#xD;&#xA;# Key management type can be: WPA-PSK or WPA-EAP (Pre-Shared or Enterprise)&#xD;&#xA;key_mgmt=WPA-PSK&#xD;&#xA;&#xD;&#xA;# Pairwise can be CCMP or TKIP (for WPA2 or WPA1)&#xD;&#xA;pairwise=TKIP&#xD;&#xA;&#xD;&#xA;#Authorization option should be OPEN for both WPA1/WPA2 (in less commonly used are SHARED and LEAP)&#xD;&#xA;auth_alg=OPEN&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;&#xD;&#xA;pi@raspberrypi ~ $ sudo reboot```&#xD;&#xA;&#xD;&#xA;To view all WiFi networks -&#xD;&#xA;```pi@raspberrypi ~ sudo iwlist wlan0 scan | grep ESSID```&#xD;&#xA;&#xD;&#xA;To view WiFi network interface -&#xD;&#xA;```pi@raspberrypi ~ $ iwconfig```&#xD;&#xA;&#xD;&#xA;## 💾 Hardware Info&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;────────────────────────────────────────────────────&#xA;Stock No. Description Price&#xA;760-3621 Edimax Wireless Nano USB Adapter £8.95&#xA;────────────────────────────────────────────────────&lt;/p&gt;</description>
    </item>
    <item>
      <title>Camera</title>
      <link>http://localhost:1313/docs/technology/camerawithraspberrypi/</link>
      <pubDate>Thu, 12 Dec 2013 22:51:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/camerawithraspberrypi/</guid>
      <description>Setting up and enabling the Raspberry Pi camera module along with useful imaging tools.</description>
    </item>
    <item>
      <title>NFS</title>
      <link>http://localhost:1313/docs/technology/nfsonraspberrypi/</link>
      <pubDate>Thu, 05 Sep 2013 22:43:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/nfsonraspberrypi/</guid>
      <description>How to turn your Raspberry Pi into a simple and effective network file server using Samba.</description>
    </item>
    <item>
      <title>VNC</title>
      <link>http://localhost:1313/docs/technology/vnconraspberrypi/</link>
      <pubDate>Thu, 22 Aug 2013 22:45:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/technology/vnconraspberrypi/</guid>
      <description>A quick guide to installing and using VNC for remote access on Raspberry Pi.</description>
    </item>
    <item>
      <title>Raspberry Pi</title>
      <link>http://localhost:1313/docs/technology/raspberrypisetup/</link>
      <pubDate>Wed, 24 Jul 2013 10:55:52 +0100</pubDate>
      <guid>http://localhost:1313/docs/technology/raspberrypisetup/</guid>
      <description>&lt;h2 id=&#34;raspberry-pi-setup&#34;&gt;&#xA;  Raspberry Pi Setup&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#raspberry-pi-setup&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Steps I followed to set-up my raspberry Pi with Raspbian&lt;/p&gt;&#xA;&lt;p&gt;Also configure -&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;XBMC (for playing videos)&lt;/li&gt;&#xA;&lt;li&gt;NFS (to access external hard drive from any device in the house)&lt;/li&gt;&#xA;&lt;li&gt;VNC viewer (to access the desktop from any device in the house)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;format-sd-card&#34;&gt;&#xA;  Format SD Card&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#format-sd-card&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Download &lt;a href=&#34;https://www.sdcard.org/downloads/formatter_4/&#34;&gt;SD Formatter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Install SD Formatter and run the software&lt;/li&gt;&#xA;&lt;li&gt;Set &amp;ldquo;FORMAT SIZE ADJUSTMENT&amp;rdquo; to ON in the Options menu.&lt;/li&gt;&#xA;&lt;li&gt;Make sure you have selected the Drive your SD Card is inserted in&lt;/li&gt;&#xA;&lt;li&gt;Format the memory card&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Use gparted (or the command-line version parted if you prefer), if you don&amp;rsquo;t have it, install it as you usually would.&lt;/li&gt;&#xA;&lt;li&gt;Format the entire disk as FAT / FAT16 (make sure you select the correct disk)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;install-os&#34;&gt;&#xA;  Install OS&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#install-os&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;NOOBS&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
